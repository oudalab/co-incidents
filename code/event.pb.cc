// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

#include "event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_event_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_event_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Embed;
}  // namespace protobuf_event_2eproto
namespace event_models {
class EmbedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Embed>
      _instance;
} _Embed_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event>
      _instance;
} _Event_default_instance_;
}  // namespace event_models
namespace protobuf_event_2eproto {
static void InitDefaultsEmbed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_models::_Embed_default_instance_;
    new (ptr) ::event_models::Embed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_models::Embed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Embed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmbed}, {}};

static void InitDefaultsEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::event_models::_Event_default_instance_;
    new (ptr) ::event_models::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::event_models::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEvent}, {
      &protobuf_event_2eproto::scc_info_Embed.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Embed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Embed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Embed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Embed, str_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, rootcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, geoname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, date8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, src_actor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, src_agent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, tgt_actor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, tgt_agent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::event_models::Event, embed_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::event_models::Embed)},
  { 7, 28, sizeof(::event_models::Event)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::event_models::_Embed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::event_models::_Event_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "event.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013event.proto\022\014event_models\"\024\n\005Embed\022\013\n\003"
      "str\030\001 \003(\t\"\241\002\n\005Event\022\014\n\004code\030\001 \001(\t\022\020\n\010roo"
      "tcode\030\002 \001(\t\022\020\n\010latitude\030\003 \001(\t\022\021\n\tlongitu"
      "de\030\004 \001(\t\022\017\n\007geoname\030\005 \001(\t\022\r\n\005date8\030\006 \001(\t"
      "\022\n\n\002id\030\007 \001(\t\022\014\n\004year\030\010 \001(\t\022\021\n\tsrc_actor\030"
      "\t \001(\t\022\021\n\tsrc_agent\030\n \001(\t\022\021\n\ttgt_actor\030\013 "
      "\001(\t\022\021\n\ttgt_agent\030\014 \001(\t\022\r\n\005month\030\r \001(\t\022\013\n"
      "\003day\030\016 \001(\t\022\r\n\005index\030\017 \001(\t\022\"\n\005embed\030\020 \002(\013"
      "2\023.event_models.Embed"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 341);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "event.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_event_2eproto
namespace event_models {

// ===================================================================

void Embed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Embed::kStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Embed::Embed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_event_2eproto::scc_info_Embed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:event_models.Embed)
}
Embed::Embed(const Embed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      str_(from.str_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:event_models.Embed)
}

void Embed::SharedCtor() {
}

Embed::~Embed() {
  // @@protoc_insertion_point(destructor:event_models.Embed)
  SharedDtor();
}

void Embed::SharedDtor() {
}

void Embed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Embed::descriptor() {
  ::protobuf_event_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_event_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Embed& Embed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_event_2eproto::scc_info_Embed.base);
  return *internal_default_instance();
}


void Embed::Clear() {
// @@protoc_insertion_point(message_clear_start:event_models.Embed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Embed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:event_models.Embed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string str = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str(this->str_size() - 1).data(),
            static_cast<int>(this->str(this->str_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Embed.str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:event_models.Embed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:event_models.Embed)
  return false;
#undef DO_
}

void Embed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:event_models.Embed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string str = 1;
  for (int i = 0, n = this->str_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str(i).data(), static_cast<int>(this->str(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Embed.str");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->str(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:event_models.Embed)
}

::google::protobuf::uint8* Embed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:event_models.Embed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string str = 1;
  for (int i = 0, n = this->str_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str(i).data(), static_cast<int>(this->str(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Embed.str");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->str(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_models.Embed)
  return target;
}

size_t Embed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_models.Embed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string str = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->str_size());
  for (int i = 0, n = this->str_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->str(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Embed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_models.Embed)
  GOOGLE_DCHECK_NE(&from, this);
  const Embed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Embed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_models.Embed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_models.Embed)
    MergeFrom(*source);
  }
}

void Embed::MergeFrom(const Embed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_models.Embed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  str_.MergeFrom(from.str_);
}

void Embed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_models.Embed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Embed::CopyFrom(const Embed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_models.Embed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Embed::IsInitialized() const {
  return true;
}

void Embed::Swap(Embed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Embed::InternalSwap(Embed* other) {
  using std::swap;
  str_.InternalSwap(CastToBase(&other->str_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Embed::GetMetadata() const {
  protobuf_event_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_event_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
  ::event_models::_Event_default_instance_._instance.get_mutable()->embed_ = const_cast< ::event_models::Embed*>(
      ::event_models::Embed::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kCodeFieldNumber;
const int Event::kRootcodeFieldNumber;
const int Event::kLatitudeFieldNumber;
const int Event::kLongitudeFieldNumber;
const int Event::kGeonameFieldNumber;
const int Event::kDate8FieldNumber;
const int Event::kIdFieldNumber;
const int Event::kYearFieldNumber;
const int Event::kSrcActorFieldNumber;
const int Event::kSrcAgentFieldNumber;
const int Event::kTgtActorFieldNumber;
const int Event::kTgtAgentFieldNumber;
const int Event::kMonthFieldNumber;
const int Event::kDayFieldNumber;
const int Event::kIndexFieldNumber;
const int Event::kEmbedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_event_2eproto::scc_info_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:event_models.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  rootcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rootcode()) {
    rootcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rootcode_);
  }
  latitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_latitude()) {
    latitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latitude_);
  }
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_longitude()) {
    longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
  }
  geoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_geoname()) {
    geoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.geoname_);
  }
  date8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_date8()) {
    date8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date8_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_year()) {
    year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.year_);
  }
  src_actor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_src_actor()) {
    src_actor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_actor_);
  }
  src_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_src_agent()) {
    src_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_agent_);
  }
  tgt_actor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tgt_actor()) {
    tgt_actor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tgt_actor_);
  }
  tgt_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tgt_agent()) {
    tgt_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tgt_agent_);
  }
  month_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_month()) {
    month_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.month_);
  }
  day_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_day()) {
    day_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.day_);
  }
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_index()) {
    index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
  }
  if (from.has_embed()) {
    embed_ = new ::event_models::Embed(*from.embed_);
  } else {
    embed_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:event_models.Event)
}

void Event::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rootcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  geoname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_actor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tgt_actor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tgt_agent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  month_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  day_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  embed_ = NULL;
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:event_models.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rootcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  longitude_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  geoname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date8_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_actor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  src_agent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tgt_actor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tgt_agent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  month_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  day_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete embed_;
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  ::protobuf_event_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_event_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_event_2eproto::scc_info_Event.base);
  return *internal_default_instance();
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:event_models.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      code_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      rootcode_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      latitude_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      longitude_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      geoname_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      date8_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      year_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      src_actor_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000200u) {
      src_agent_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000400u) {
      tgt_actor_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000800u) {
      tgt_agent_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00001000u) {
      month_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00002000u) {
      day_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00004000u) {
      index_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(embed_ != NULL);
      embed_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:event_models.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string rootcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rootcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rootcode().data(), static_cast<int>(this->rootcode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.rootcode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_latitude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->latitude().data(), static_cast<int>(this->latitude().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.latitude");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string longitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_longitude()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->longitude().data(), static_cast<int>(this->longitude().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.longitude");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string geoname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_geoname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->geoname().data(), static_cast<int>(this->geoname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.geoname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string date8 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date8().data(), static_cast<int>(this->date8().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.date8");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string year = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_year()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->year().data(), static_cast<int>(this->year().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.year");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string src_actor = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_actor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src_actor().data(), static_cast<int>(this->src_actor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.src_actor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string src_agent = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src_agent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->src_agent().data(), static_cast<int>(this->src_agent().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.src_agent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tgt_actor = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tgt_actor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tgt_actor().data(), static_cast<int>(this->tgt_actor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.tgt_actor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tgt_agent = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tgt_agent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tgt_agent().data(), static_cast<int>(this->tgt_agent().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.tgt_agent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string month = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_month()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->month().data(), static_cast<int>(this->month().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.month");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string day = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_day()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->day().data(), static_cast<int>(this->day().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.day");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string index = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_index()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->index().data(), static_cast<int>(this->index().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "event_models.Event.index");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .event_models.Embed embed = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_embed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:event_models.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:event_models.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:event_models.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // optional string rootcode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rootcode().data(), static_cast<int>(this->rootcode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.rootcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rootcode(), output);
  }

  // optional string latitude = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->latitude().data(), static_cast<int>(this->latitude().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.latitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->latitude(), output);
  }

  // optional string longitude = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->longitude().data(), static_cast<int>(this->longitude().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.longitude");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->longitude(), output);
  }

  // optional string geoname = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->geoname().data(), static_cast<int>(this->geoname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.geoname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->geoname(), output);
  }

  // optional string date8 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date8().data(), static_cast<int>(this->date8().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.date8");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date8(), output);
  }

  // optional string id = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->id(), output);
  }

  // optional string year = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->year().data(), static_cast<int>(this->year().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->year(), output);
  }

  // optional string src_actor = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_actor().data(), static_cast<int>(this->src_actor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.src_actor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->src_actor(), output);
  }

  // optional string src_agent = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_agent().data(), static_cast<int>(this->src_agent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.src_agent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->src_agent(), output);
  }

  // optional string tgt_actor = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgt_actor().data(), static_cast<int>(this->tgt_actor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.tgt_actor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->tgt_actor(), output);
  }

  // optional string tgt_agent = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgt_agent().data(), static_cast<int>(this->tgt_agent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.tgt_agent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->tgt_agent(), output);
  }

  // optional string month = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->month().data(), static_cast<int>(this->month().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.month");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->month(), output);
  }

  // optional string day = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->day().data(), static_cast<int>(this->day().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.day");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->day(), output);
  }

  // optional string index = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index().data(), static_cast<int>(this->index().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.index");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->index(), output);
  }

  // required .event_models.Embed embed = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_embed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:event_models.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:event_models.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // optional string rootcode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rootcode().data(), static_cast<int>(this->rootcode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.rootcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rootcode(), target);
  }

  // optional string latitude = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->latitude().data(), static_cast<int>(this->latitude().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.latitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->latitude(), target);
  }

  // optional string longitude = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->longitude().data(), static_cast<int>(this->longitude().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.longitude");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->longitude(), target);
  }

  // optional string geoname = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->geoname().data(), static_cast<int>(this->geoname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.geoname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->geoname(), target);
  }

  // optional string date8 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date8().data(), static_cast<int>(this->date8().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.date8");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date8(), target);
  }

  // optional string id = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->id(), target);
  }

  // optional string year = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->year().data(), static_cast<int>(this->year().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->year(), target);
  }

  // optional string src_actor = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_actor().data(), static_cast<int>(this->src_actor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.src_actor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->src_actor(), target);
  }

  // optional string src_agent = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->src_agent().data(), static_cast<int>(this->src_agent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.src_agent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->src_agent(), target);
  }

  // optional string tgt_actor = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgt_actor().data(), static_cast<int>(this->tgt_actor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.tgt_actor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->tgt_actor(), target);
  }

  // optional string tgt_agent = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tgt_agent().data(), static_cast<int>(this->tgt_agent().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.tgt_agent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->tgt_agent(), target);
  }

  // optional string month = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->month().data(), static_cast<int>(this->month().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.month");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->month(), target);
  }

  // optional string day = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->day().data(), static_cast<int>(this->day().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.day");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->day(), target);
  }

  // optional string index = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->index().data(), static_cast<int>(this->index().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "event_models.Event.index");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->index(), target);
  }

  // required .event_models.Embed embed = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_embed(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_models.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:event_models.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .event_models.Embed embed = 16;
  if (has_embed()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *embed_);
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string rootcode = 2;
    if (has_rootcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rootcode());
    }

    // optional string latitude = 3;
    if (has_latitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->latitude());
    }

    // optional string longitude = 4;
    if (has_longitude()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->longitude());
    }

    // optional string geoname = 5;
    if (has_geoname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->geoname());
    }

    // optional string date8 = 6;
    if (has_date8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date8());
    }

    // optional string id = 7;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional string year = 8;
    if (has_year()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->year());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional string src_actor = 9;
    if (has_src_actor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src_actor());
    }

    // optional string src_agent = 10;
    if (has_src_agent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src_agent());
    }

    // optional string tgt_actor = 11;
    if (has_tgt_actor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tgt_actor());
    }

    // optional string tgt_agent = 12;
    if (has_tgt_agent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tgt_agent());
    }

    // optional string month = 13;
    if (has_month()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->month());
    }

    // optional string day = 14;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->day());
    }

    // optional string index = 15;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:event_models.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:event_models.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:event_models.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:event_models.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_rootcode();
      rootcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rootcode_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_latitude();
      latitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.latitude_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_longitude();
      longitude_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.longitude_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_geoname();
      geoname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.geoname_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_date8();
      date8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date8_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_year();
      year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.year_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_src_actor();
      src_actor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_actor_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_src_agent();
      src_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_agent_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_tgt_actor();
      tgt_actor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tgt_actor_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_tgt_agent();
      tgt_agent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tgt_agent_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_month();
      month_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.month_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_day();
      day_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.day_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_index();
      index_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.index_);
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_embed()->::event_models::Embed::MergeFrom(from.embed());
    }
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:event_models.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_models.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  if ((_has_bits_[0] & 0x00008000) != 0x00008000) return false;
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  code_.Swap(&other->code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rootcode_.Swap(&other->rootcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  latitude_.Swap(&other->latitude_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  longitude_.Swap(&other->longitude_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  geoname_.Swap(&other->geoname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  date8_.Swap(&other->date8_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  year_.Swap(&other->year_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  src_actor_.Swap(&other->src_actor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  src_agent_.Swap(&other->src_agent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tgt_actor_.Swap(&other->tgt_actor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  tgt_agent_.Swap(&other->tgt_agent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  month_.Swap(&other->month_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  day_.Swap(&other->day_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  index_.Swap(&other->index_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(embed_, other->embed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_event_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_event_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace event_models
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::event_models::Embed* Arena::CreateMaybeMessage< ::event_models::Embed >(Arena* arena) {
  return Arena::CreateInternal< ::event_models::Embed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::event_models::Event* Arena::CreateMaybeMessage< ::event_models::Event >(Arena* arena) {
  return Arena::CreateInternal< ::event_models::Event >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
